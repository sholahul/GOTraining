{
	"info": {
		"_postman_id": "6582b44a-fd72-48b0-af1e-3032f55171e6",
		"name": "B. APIM - BVAPI",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10055385"
	},
	"item": [
		{
			"name": "Utility SNAP BI",
			"item": [
				{
					"name": "01 Signature Access Token",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Parsing the response JSON to extract the signature and header timestamp\r",
									"const responseJson = pm.response.json();\r",
									"const signature = responseJson.Signature;\r",
									"const headerTimestamp = pm.response.headers.get(\"X-TIMESTAMP\");\r",
									"\r",
									"// Storing the values in environment variables for future use\r",
									"pm.collectionVariables.set(\"signature\", signature);\r",
									"pm.collectionVariables.set(\"headerTimestamp\", headerTimestamp);\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-TIMESTAMP",
								"value": "{{timestampISO8601}}",
								"type": "text"
							},
							{
								"key": "X-CLIENT-KEY",
								"value": "{{client-id}}",
								"type": "text"
							},
							{
								"key": "PRIVATE-KEY",
								"value": "{{private-key}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{ip-frontend-apim}}/utilities/signature-auth",
							"host": [
								"{{ip-frontend-apim}}"
							],
							"path": [
								"utilities",
								"signature-auth"
							]
						}
					},
					"response": []
				},
				{
					"name": "02 Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"const AccessToken = responseJson.accessToken;\r",
									"\r",
									"pm.collectionVariables.set(\"accessToken\", AccessToken);\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({key:\"X-SIGNATURE\",value:pm.collectionVariables.get(\"signature\")});\r",
									"pm.request.headers.add({key:\"X-TIMESTAMP\",value:pm.collectionVariables.get(\"headerTimestamp\")});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						},
						"followOriginalHttpMethod": false,
						"followAuthorizationHeader": false,
						"strictSSL": false,
						"followRedirects": true
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							},
							{
								"key": "X-TIMESTAMP",
								"value": "2023-09-04T16:40:25+07:00",
								"type": "text",
								"disabled": true
							},
							{
								"key": "X-CLIENT-KEY",
								"value": "{{client-id}}",
								"type": "text"
							},
							{
								"key": "X-SIGNATURE",
								"value": "{{si",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"grant_type\": \"client_credentials\",\r\n    \"additionalInfo\": {\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{ip-frontend-apim}}/1.0/access-token/b2b",
							"host": [
								"{{ip-frontend-apim}}"
							],
							"path": [
								"1.0",
								"access-token",
								"b2b"
							]
						}
					},
					"response": []
				},
				{
					"name": "03 Signature Service",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const responseJson = pm.response.json();\r",
									"const signatureService = responseJson.Signature;\r",
									"\r",
									"pm.environment.set(\"signatureService\", signatureService);"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.request.headers.add({key:\"ACCESS-TOKEN\",value:pm.collectionVariables.get(\"accessToken\")});\r",
									"pm.request.headers.add({key:\"X-TIMESTAMP\",value:pm.collectionVariables.get(\"headerTimestamp\")});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "X-TIMESTAMP",
								"value": "2023-09-04T16:40:25+07:00",
								"type": "text",
								"disabled": true
							},
							{
								"key": "X-CLIENT-SECRET",
								"value": "{{client-secret}}",
								"type": "text"
							},
							{
								"key": "HTTP-METHOD",
								"value": "POST",
								"type": "text"
							},
							{
								"key": "ENDPOINT-URL",
								"value": "/bsb/snap-bi/v1.0/transfer-intrabank",
								"type": "text"
							},
							{
								"key": "ACCESS-TOKEN",
								"value": "G3emjlRusrXQZBDiu4JVrw0iC8unT8HfcSr7p7lH8Vqy4V7JzqnGx3",
								"type": "text",
								"disabled": true
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"partnerReferenceNo\": \"202309130001115\",\r\n    \"amount\": {\r\n        \"value\": \"12501\",\r\n        \"currency\": \"IDR\"\r\n    },\r\n    \"beneficiaryAccountNo\":\"17409003225\",\r\n    \"beneficiaryEmail\": \"putradiikaa@bsb.com\",\r\n    \"currency\": \"IDR\",\r\n    \"customerReference\": \"10052019\",\r\n    \"feeType\": \"BEN\",\r\n    \"remark\": \"Transfer Interbank\",\r\n    \"sourceAccountNo\": \"1401300004\",\r\n    \"transactionDate\": \"2023-10-30T10:20:00+07:00\",\r\n    \"additionalInfo\": {\r\n        \"msgType\": \"N\"\r\n        \r\n    }\r\n}"
						},
						"url": {
							"raw": "{{ip-frontend-apim}}/utilities/signature-service",
							"host": [
								"{{ip-frontend-apim}}"
							],
							"path": [
								"utilities",
								"signature-service"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Frontend APIM",
			"item": [
				{
					"name": "Non Transactional",
					"item": [
						{
							"name": "Internal Account Inquiry",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.add({key:\"X-TIMESTAMP\",value:pm.collectionVariables.get(\"headerTimestamp\")});\r",
											"\r",
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = pm.collectionVariables.get(\"headerTimestamp\");\r",
											"//var time = \"2022-08-12T08:10:01+07:00\";\r",
											"//var accesstoken = \"zmChPLBvE51hj7sgOE9vlPiDZbGopZwKvo818EGyAheEJFmRzrSVzL\"; //change oauth token\r",
											"var accesstoken = pm.collectionVariables.get(\"accessToken\");\r",
											"var method = request.method;\r",
											"var secret = pm.collectionVariables.get(\"client-secret\");\r",
											"//var secret = \"1d83b23a-50be-4c0a-a851-0d67cc6db234\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var signature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"\r",
											"function randInt(min, max) {\r",
											"   return Math.round((Math.random() * Math.abs(max - min)) + min);\r",
											"}\r",
											"pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:randInt(100000000000000000, 999999999999999999)});\r",
											"//pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:\"1111111111111111112\"});\r",
											"\r",
											"// pm.environment.set(\"signature\",signature);\r",
											"//pm.request.headers.add({key:\"X-TIMESTAMP\",value:time});\r",
											"pm.request.headers.add({key:\"X-SIGNATURE\",value:signature});\r",
											"pm.request.headers.add({key:\"Authorization\",value:\"Bearer \"+accesstoken});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"RC \" + responseCode.code + \". Please Check Your Request / Signature Again!\"] = responseCode.code !== 200 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2001500\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountName).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountStatus).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountType).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.currency).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-18T16:51:09+07:00",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-SIGNATURE",
										"value": "c063ee4679d266c4b7a094bb295543190c97a9af217eab7bfb0d32766e9097696bfb30d77d9ee602e8118933966660b909d850e6484e1ef4e01237fbe7d075ba",
										"type": "text",
										"disabled": true
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CHANNEL-ID",
										"value": "{{channel-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"partnerReferenceNo\":\"20230921101231466\",\r\n\"beneficiaryAccountNo\":\"17409003225\",\r\n\"additionalInfo\":{\r\n    }\r\n }",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/account-inquiry-internal",
									"host": [
										"{{ip-frontend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"account-inquiry-internal"
									]
								}
							},
							"response": [
								{
									"name": "Internal Account Inquiry",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "{{headerTimestamp}}",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{signatureService}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\": \"2023071400001\",\r\n    \"beneficiaryAccountNo\": \"1701016063\",\r\n    \"additionalInfo\": {\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"IBTERM\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "https://206.189.152.0:8065/bsb/snap-bi/v1.0/account-inquiry-internal",
											"protocol": "https",
											"host": [
												"206",
												"189",
												"152",
												"0"
											],
											"port": "8065",
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"account-inquiry-internal"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-correlationid"
										},
										{
											"key": "Max-Forwards",
											"value": "19"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 (), 1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-db7ccc64b18cec2b8c092345 0; Id-db7ccc64b28c0b063f241a38 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Fri, 04 Aug 2023 04:23:04 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2001500\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080411230567000000695\",\n    \"partnerReferenceNo\": \"2023071400001\",\n    \"beneficiaryAccountName\": \"XYZ\",\n    \"beneficiaryAccountNo\": \"1701016063\",\n    \"beneficiaryAccountStatus\": \"AKTIF\",\n    \"beneficiaryAccountType\": \"\",\n    \"currency\": \"IDR\",\n    \"additionalInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"channelId\": \"6014\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"IBTERM\"\n    }\n}"
								}
							]
						},
						{
							"name": "External Account Inquiry",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.add({key:\"X-TIMESTAMP\",value:pm.collectionVariables.get(\"headerTimestamp\")});\r",
											"\r",
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = pm.collectionVariables.get(\"headerTimestamp\");\r",
											"//var time = \"2022-08-12T08:10:01+07:00\";\r",
											"//var accesstoken = \"zmChPLBvE51hj7sgOE9vlPiDZbGopZwKvo818EGyAheEJFmRzrSVzL\"; //change oauth token\r",
											"var accesstoken = pm.collectionVariables.get(\"accessToken\");\r",
											"var method = request.method;\r",
											"var secret = pm.collectionVariables.get(\"client-secret\");\r",
											"//var secret = \"1d83b23a-50be-4c0a-a851-0d67cc6db234\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var signature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"\r",
											"function randInt(min, max) {\r",
											"   return Math.round((Math.random() * Math.abs(max - min)) + min);\r",
											"}\r",
											"pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:randInt(100000000000000000, 999999999999999999)});\r",
											"//pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:\"111111111111111112\"});\r",
											"\r",
											"// pm.environment.set(\"signature\",signature);\r",
											"//pm.request.headers.add({key:\"X-TIMESTAMP\",value:time});\r",
											"pm.request.headers.add({key:\"X-SIGNATURE\",value:signature});\r",
											"pm.request.headers.add({key:\"Authorization\",value:\"Bearer \"+accesstoken});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-21T13:28:12+07:00",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-SIGNATURE",
										"value": "eb6d7b8ee2fb3c6711bf3f61f393d24af60f1086796544087c987bbdb5ff55c9245140b11d907dd65edbf93ebb06841df74c6fd1ad292e8594efef9123c8b064",
										"type": "text",
										"disabled": true
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CHANNEL-ID",
										"value": "{{channel-id}}",
										"type": "text"
									},
									{
										"key": "",
										"value": "",
										"type": "text",
										"disabled": true
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"beneficiaryBankCode\": \"014\",\r\n    \"partnerReferenceNo\": \"2023080300103\",\r\n    \"beneficiaryAccountNo\": \"0141234567890\",\r\n    \"additionalInfo\": {\r\n        \"amount\": \"25003.00\",\r\n        \"accountFrom\": \"17409003225\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/account-inquiry-external",
									"host": [
										"{{ip-frontend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"account-inquiry-external"
									]
								}
							},
							"response": [
								{
									"name": "External Account Inquiry",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "{{headerTimestamp}}",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{signatureService}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"beneficiaryBankCode\": \"536\",\r\n    \"beneficiaryAccountNo\": \"5361112223334\",\r\n    \"partnerReferenceNo\": \"2023080300000000000001\",\r\n    \"additionalInfo\": {\r\n        \"ATMCARDNUMBER\": \"62745217235000006\",\r\n        \"pcode\": \"320000\",\r\n        \"amount\": \"10000000\",\r\n        \"terminalId\": \"CIB00546\",\r\n        \"regid\": \"EDAB2801\",\r\n        \"destinationName\": \"\",\r\n        \"sourceBankCode\": \"120\",\r\n        \"issuerName\": \"\",\r\n        \"referenceNumber\": \"242424\",\r\n        \"filler\": \"\",\r\n        \"otpPinEncrypted\": \"57446556\",\r\n        \"accountFrom\": \"1406208215\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://206.189.152.0:8080/bsb/snap-bi/v1.0/account-inquiry-external",
											"protocol": "http",
											"host": [
												"206",
												"189",
												"152",
												"0"
											],
											"port": "8080",
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"account-inquiry-external"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-3f7dcc64e98c32facd458c69 0"
										},
										{
											"key": "Date",
											"value": "Fri, 04 Aug 2023 04:23:27 GMT"
										},
										{
											"key": "X-REQUEST-ID",
											"value": "1691123007217"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2001600\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"242424\",\n    \"partnerReferenceNo\": \"2023080300000000000001\",\n    \"beneficiaryAccountName\": \"SDR FERSY\",\n    \"beneficiaryAccountNo\": \"5361112223334\",\n    \"beneficiaryBankCode\": \"536\"\n}"
								}
							]
						},
						{
							"name": "Balance Inquiry",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.add({key:\"X-TIMESTAMP\",value:pm.collectionVariables.get(\"headerTimestamp\")});\r",
											"\r",
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = pm.collectionVariables.get(\"headerTimestamp\");\r",
											"//var time = \"2022-08-12T08:10:01+07:00\";\r",
											"//var accesstoken = \"zmChPLBvE51hj7sgOE9vlPiDZbGopZwKvo818EGyAheEJFmRzrSVzL\"; //change oauth token\r",
											"var accesstoken = pm.collectionVariables.get(\"accessToken\");\r",
											"var method = request.method;\r",
											"var secret = pm.collectionVariables.get(\"client-secret\");\r",
											"//var secret = \"1d83b23a-50be-4c0a-a851-0d67cc6db234\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var signature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"\r",
											"function randInt(min, max) {\r",
											"   return Math.round((Math.random() * Math.abs(max - min)) + min);\r",
											"}\r",
											"pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:randInt(100000000000000000, 999999999999999999)});\r",
											"//pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:1111111111111111});\r",
											"\r",
											"// pm.environment.set(\"signature\",signature);\r",
											"//pm.request.headers.add({key:\"X-TIMESTAMP\",value:time});\r",
											"pm.request.headers.add({key:\"X-SIGNATURE\",value:signature});\r",
											"pm.request.headers.add({key:\"Authorization\",value:\"Bearer \"+accesstoken});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-09-04T16:40:25+07:00",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-SIGNATURE",
										"value": "775e2a5b12f762ef6bf17089b9d12533949ab0210e6949700ee716a2071f0fa93d7f3b0aec44b3e6c4d4535e61ecaeaafa6e77b88874d3f6d9071d0c59b78eda",
										"type": "text",
										"disabled": true
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CHANNEL-ID",
										"value": "{{channel-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"partnerReferenceNo\": \"2023071400060\",\r\n    \"bankCardToken\":\"\",\r\n    \"accountNo\": \"1400955811\",\r\n    \"balanceType\": [\r\n        \"CASH\",\"Coins\"\r\n    ],\r\n    \"additionalInfo\": {\r\n        \r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/balance-inquiry",
									"host": [
										"{{ip-frontend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"balance-inquiry"
									]
								}
							},
							"response": [
								{
									"name": "Balance Inquiry",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "2023-09-04T16:40:25+07:00",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-SIGNATURE",
												"value": "775e2a5b12f762ef6bf17089b9d12533949ab0210e6949700ee716a2071f0fa93d7f3b0aec44b3e6c4d4535e61ecaeaafa6e77b88874d3f6d9071d0c59b78eda",
												"type": "text",
												"disabled": true
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text",
												"disabled": true
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "",
												"type": "text",
												"disabled": true
											},
											{
												"key": "CHANNEL-ID",
												"value": "{{channel-id}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\": \"2023071400001\",\r\n    \"bankCardToken\": \"6d7963617264746f6b656e\",\r\n    \"accountNo\": \"1401300004\",\r\n    \"balanceType\": [\r\n        \"Balance\"\r\n    ],\r\n    \"additionalInfo\": {\r\n        \"channelId\": \"6031\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"IBTERM\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/balance-inquiry",
											"host": [
												"{{ip-frontend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"balance-inquiry"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "19"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIM-UA01 (), 1.0 KPS-APIM-UA01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-1dfbf7642a77de1f33f1495a 0; Id-1dfbf7642b773cd5d7e08b6b 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Wed, 06 Sep 2023 04:02:55 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2001100\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023090611025897000002349\",\n    \"partnerReferenceNo\": \"2023071400001\",\n    \"accountNo\": \"1401300004\",\n    \"name\": \"KUD SURYA BHAKTI\",\n    \"accountInfos\": [\n        {\n            \"balanceType\": \"Balance\",\n            \"amount\": {\n                \"value\": \"12000000.00\",\n                \"currency\": \"IDR\"\n            },\n            \"floatAmount\": {\n                \"value\": \"0.00\",\n                \"currency\": \"IDR\"\n            },\n            \"holdAmount\": {\n                \"value\": \"0.00\",\n                \"currency\": \"IDR\"\n            },\n            \"availableBalance\": {\n                \"value\": \"12000000.00\",\n                \"currency\": \"IDR\"\n            },\n            \"ledgerBalance\": {\n                \"value\": \"0.00\",\n                \"currency\": \"IDR\"\n            },\n            \"currentMultilateralLimit\": {\n                \"value\": \"0.00\",\n                \"currency\": \"IDR\"\n            },\n            \"registrationStatusCode\": \"\",\n            \"status\": \"0001\"\n        }\n    ],\n    \"additionalInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"channelId\": \"6031\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"IBTERM\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Transactional History",
					"item": [
						{
							"name": "Bank Statement - API Rekon MT940",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var responseData = pm.response.text();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"RC \" + responseCode.code + \". Please Check Your Request / Signature Again!\"] = responseCode.code !== 200 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body contains text\", function () {\r",
											"  pm.expect(pm.response.text()).to.include('BANK SUMSEL');\r",
											"});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.add({key:\"X-TIMESTAMP\",value:pm.collectionVariables.get(\"headerTimestamp\")});\r",
											"\r",
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = pm.collectionVariables.get(\"headerTimestamp\");\r",
											"//var time = \"2022-08-12T08:10:01+07:00\";\r",
											"//var accesstoken = \"zmChPLBvE51hj7sgOE9vlPiDZbGopZwKvo818EGyAheEJFmRzrSVzL\"; //change oauth token\r",
											"var accesstoken = pm.collectionVariables.get(\"accessToken\");\r",
											"var method = request.method;\r",
											"var secret = pm.collectionVariables.get(\"client-secret\");\r",
											"//var secret = \"1d83b23a-50be-4c0a-a851-0d67cc6db234\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var signature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"\r",
											"function randInt(min, max) {\r",
											"   return Math.round((Math.random() * Math.abs(max - min)) + min);\r",
											"}\r",
											"pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:randInt(100000000000000000, 999999999999999999)});\r",
											"\r",
											"// pm.environment.set(\"signature\",signature);\r",
											"//pm.request.headers.add({key:\"X-TIMESTAMP\",value:time});\r",
											"pm.request.headers.add({key:\"X-SIGNATURE\",value:signature});\r",
											"pm.request.headers.add({key:\"Authorization\",value:\"Bearer \"+accesstoken});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-18T14:47:34+07:00",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-SIGNATURE",
										"value": "987197b5ff40062f93155944c19ba2c0e8ad994591a023ace487c67693009774580d5159e4c7588e87bca6825eff9a5293ffabeafb0c6d93ae2dcaa9ea33268c",
										"type": "text",
										"disabled": true
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CHANNEL-ID",
										"value": "{{channel-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"accountNo\": \"70000001060\",\r\n    \"fromDateTime\": \"2023-11-07T00:00:00+07:00\",\r\n    \"partnerReferenceNo\": \"20230908094421524\",\r\n    \"toDateTime\": \"2023-11-07T11:30:00+07:00\",\r\n    \"additionalInfo\": {\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/bank-statement",
									"host": [
										"{{ip-frontend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"bank-statement"
									]
								}
							},
							"response": [
								{
									"name": "Bank Statement - API Rekon MT940",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "{{headerTimestamp}}",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{signatureService}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\": \"2023071400001\",\r\n    \"accountNo\": \"1701016063\",\r\n    \"fromDateTime\": \"2019-07-11T00:00:00+07:00\",\r\n    \"toDateTime\": \"2019-07-13T00:00:00+07:00\",\r\n    \"additionalInfo\": {\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"IBTERM\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/bank-statement",
											"host": [
												"{{ip-frontend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"bank-statement"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-correlationid"
										},
										{
											"key": "Max-Forwards",
											"value": "19"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 (), 1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-3fcbd1644bf9fc8bc9badf27 0; Id-3fcbd1644cf9351f9ecbaa0e 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 04:59:01 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{1:F01BANK SUMSEL}{2:I940XYZ){4:\r\n:20:2023080811590255\r\n:25:1701016063\r\n:28C:001\r\n:60F:C190711IDR4845605,00\r\n:61:190712D100000,00N\r\n:86:58515770|259|LETTA\r\n08011001112\r\n:61:190712D135000,00N\r\n:86:58517165|263|LETTA\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517166|263|LETTA\r\n08010166667\r\n:61:190712D135000,00N\r\n:86:58517169|263|SULI\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517170|263|SULI\r\n08010166667\r\n:61:190712D135000,00N\r\n:86:58517173|263|LETTA\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517174|263|LETTA\r\n08010166667\r\n:61:190712D135000,00N\r\n:86:58517177|263|SULI\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517178|263|SULI\r\n08010166667\r\n:61:190712D135000,00N\r\n:86:58517187|263|LETTA\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517188|263|LETTA\r\n08010166667\r\n:61:190712D135000,00N\r\n:86:58517195|263|LETTA\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517196|263|LETTA\r\n08010166667\r\n:61:190712D120000,00N\r\n:86:58517280|277|INDI\r\n08010519031\r\n:61:190712D120000,00N\r\n:86:58517281|277|INDI\r\n08011028065\r\n:61:190712D120000,00N\r\n:86:58517282|277|INDI\r\n08012099999\r\n:61:190712D50000,00N\r\n:86:58517295|277|LETTA\r\n08019999998\r\n:61:190712D200000,00N\r\n:86:58517317|277|INDI\r\n08019991111\r\n:61:190712D300000,00N\r\n:86:58517334|277|LETTA\r\n08010519031\r\n:61:190712D300000,00N\r\n:86:58517335|277|LETTA\r\n08011028063\r\n:61:190712D300000,00N\r\n:86:58517336|277|LETTA\r\n08013007061\r\n:61:190712D300000,00N\r\n:86:58517338|277|LETTA\r\n08010519031\r\n:61:190712D300000,00N\r\n:86:58517339|277|LETTA\r\n08011028063\r\n:61:190712D300000,00N\r\n:86:58517340|277|LETTA\r\n08013007061\r\n:61:190712D300000,00N\r\n:86:58517342|277|INDI\r\n08010519031\r\n:61:190712D300000,00N\r\n:86:58517343|277|INDI\r\n08011028063\r\n:61:190712D300000,00N\r\n:86:58517344|277|INDI\r\n08013007061\r\n:61:190712D100000,00N\r\n:86:58517349|277|INDI\r\n08010519031\r\n:62F:D190713IDR-974395,00\r\n-}u0000\u0000"
								}
							]
						}
					]
				},
				{
					"name": "Transactional",
					"item": [
						{
							"name": "Interbank Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.add({key:\"X-TIMESTAMP\",value:pm.collectionVariables.get(\"headerTimestamp\")});\r",
											"\r",
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = pm.collectionVariables.get(\"headerTimestamp\");\r",
											"//var time = \"2022-08-12T08:10:01+07:00\";\r",
											"//var accesstoken = \"zmChPLBvE51hj7sgOE9vlPiDZbGopZwKvo818EGyAheEJFmRzrSVzL\"; //change oauth token\r",
											"var accesstoken = pm.collectionVariables.get(\"accessToken\");\r",
											"var method = request.method;\r",
											"var secret = pm.collectionVariables.get(\"client-secret\");\r",
											"//var secret = \"1d83b23a-50be-4c0a-a851-0d67cc6db234\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var signature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"\r",
											"function randInt(min, max) {\r",
											"   return Math.round((Math.random() * Math.abs(max - min)) + min);\r",
											"}\r",
											"pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:randInt(100000000000000000, 999999999999999999)});\r",
											"//pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:11111111111111112});\r",
											"\r",
											"// pm.environment.set(\"signature\",signature);\r",
											"//pm.request.headers.add({key:\"X-TIMESTAMP\",value:time});\r",
											"pm.request.headers.add({key:\"X-SIGNATURE\",value:signature});\r",
											"pm.request.headers.add({key:\"Authorization\",value:\"Bearer \"+accesstoken});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"RC \" + responseCode.code + \". Please Check Your Request / Signature Again!\"] = responseCode.code !== 200 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2001800\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryBankCode).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.sourceAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.traceNo).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-22T18:24:13+07:00",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-SIGNATURE",
										"value": "dacb2d3f68a3fc083757ce0ebed59267b7fbc6d2557553aa7ba06ec379f5967009a26c195cfb4ee0c7fea820da0daa3ca95f1c9d487d61be6df085b9549e81bf",
										"type": "text",
										"disabled": true
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093111222",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CHANNEL-ID",
										"value": "{{channel-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"partnerReferenceNo\": \"2023080300000000000123\",\r\n    \"amount\": {\r\n        \"value\": \"35120\",\r\n        \"currency\": \"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\": \"SDR FERSY\",\r\n    \"beneficiaryBankCode\": \"536\",\r\n    \"beneficiaryAccountNo\":\"5361112223334\",\r\n    \"beneficiaryBankName\": \"\",\r\n    \"customerReference\": \"242424\",\r\n    \"sourceAccountNo\": \"8010190002\",\r\n    \"transactionDate\": \"2023-11-07T16:30:00+07:00\",\r\n    \"additionalInfo\": {\r\n        \"issuerName\": \"BPDPKS\",\r\n        \"filler\": \"600100\",\r\n        \"sourceAccountType\":\"TABUNGAN\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/transfer-interbank",
									"host": [
										"{{ip-frontend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"transfer-interbank"
									]
								}
							},
							"response": [
								{
									"name": "Interbank Normal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "{{headerTimestamp}}",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{signatureService}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\": \"2023080300000000000001\",\r\n    \"amount\": {\r\n        \"value\": \"100000.00\",\r\n        \"currency\": \"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\": \"\",\r\n    \"beneficiaryAccountNo\": \"5361112223334\",\r\n    \"beneficiaryBankCode\": \"536\",\r\n    \"beneficiaryBankName\": \"\",\r\n    \"customerReference\": \"242424\",\r\n    \"sourceAccountNo\": \"1406208215\",\r\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\": {\r\n        \"ATMCARDNUMBER\": \"62745217235000006\",\r\n        \"pcode\": \"400000\",\r\n        \"terminalId\": \"CIB00546\",\r\n        \"regid\": \"EDAB2801\",\r\n        \"destinationName\": \"\",\r\n        \"sourceBankCode\": \"120\",\r\n        \"issuerName\": \"\",\r\n        \"filler\": \"\",\r\n        \"otpPinEncrypted\": \"57446556\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/transfer-interbank",
											"host": [
												"{{ip-frontend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"transfer-interbank"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Allow-Origin",
											"value": "www.hostname.com"
										},
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-correlationid"
										},
										{
											"key": "Max-Forwards",
											"value": "19"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 (), 1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-a6cbd16477f90f70408c850e 0; Id-a6cbd16478f96021df90c6f8 0"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 04:59:19 GMT"
										},
										{
											"key": "X-REQUEST-ID",
											"value": "1691470759071"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"4001812\",\n    \"responseMessage\": \"Transaction cannot be Processed [ist-12]. Contact Call Center 14083\"\n}"
								}
							]
						},
						{
							"name": "Intrabank Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.add({key:\"X-TIMESTAMP\",value:pm.collectionVariables.get(\"headerTimestamp\")});\r",
											"\r",
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = pm.collectionVariables.get(\"headerTimestamp\");\r",
											"//var time = \"2022-08-12T08:10:01+07:00\";\r",
											"//var accesstoken = \"zmChPLBvE51hj7sgOE9vlPiDZbGopZwKvo818EGyAheEJFmRzrSVzL\"; //change oauth token\r",
											"var accesstoken = pm.collectionVariables.get(\"accessToken\");\r",
											"var method = request.method;\r",
											"var secret = pm.collectionVariables.get(\"client-secret\");\r",
											"//var secret = \"1d83b23a-50be-4c0a-a851-0d67cc6db234\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var signature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"\r",
											"function randInt(min, max) {\r",
											"   return Math.round((Math.random() * Math.abs(max - min)) + min);\r",
											"}\r",
											"pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:randInt(100000000000000000, 999999999999999999)});\r",
											"//pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:11111111111111112});\r",
											"\r",
											"// pm.environment.set(\"signature\",signature);\r",
											"//pm.request.headers.add({key:\"X-TIMESTAMP\",value:time});\r",
											"pm.request.headers.add({key:\"X-SIGNATURE\",value:signature});\r",
											"pm.request.headers.add({key:\"Authorization\",value:\"Bearer \"+accesstoken});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"RC \" + responseCode.code + \". Please Check Your Request / Signature Again!\"] = responseCode.code !== 200 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2001700\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.currency).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.customerReference).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.sourceAccount).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionDate).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-22T15:24:53+07:00",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-SIGNATURE",
										"value": "f92b15f579262867aa0cba891613791c26be8a2fe52d30f1bf3017af224d430348a10a49425900566bafbd1aaf824afd09538e6005fcde47d91444689991f872",
										"type": "text",
										"disabled": true
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CHANNEL-ID",
										"value": "{{channel-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"partnerReferenceNo\": \"202309130001099\",\r\n    \"amount\": {\r\n        \"value\": \"21031\",\r\n        \"currency\": \"IDR\"\r\n    },\r\n    \"beneficiaryAccountNo\":\"1400100162\",\r\n    \"sourceAccountNo\": \"17409003225\",\r\n    \"beneficiaryEmail\": \"putradiikaa@bsb.com\",\r\n    \"currency\": \"IDR\",\r\n    \"customerReference\": \"10052019\",\r\n    \"feeType\": \"BEN\",\r\n    \"remark\": \"Transfer Intrabank\",\r\n    \"transactionDate\": \"2023-11-08T09:30:00+07:00\",\r\n    \"additionalInfo\": {\r\n        \"msgType\": \"N\"\r\n        \r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/transfer-intrabank",
									"host": [
										"{{ip-frontend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"transfer-intrabank"
									]
								}
							},
							"response": [
								{
									"name": "Intrabank Normal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "{{headerTimestamp}}",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{signatureService}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    //\"partnerReferenceNo\":\"{{reffNumber}}\",\r\n    \"partnerReferenceNo\":\"2023071401231\",\r\n    \"amount\":{\r\n        \"value\":\"10000.57\",\r\n        \"currency\":\"IDR\"\r\n    },\r\n    \"beneficiaryAccountNo\":\"1720191001\",\r\n    \"beneficiaryEmail\":\"yories.yolanda@work.bri.co.id \",\r\n    \"currency\":\"IDR\",\r\n    \"customerReference\":\"10052019\",\r\n    \"feeType\":\"BEN\",\r\n    \"remark\":\"remark test\",\r\n    \"sourceAccountNo\":\"17300100001\",\r\n    \"transactionDate\":\"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\":{\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6018\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/transfer-intrabank",
											"host": [
												"{{ip-frontend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"transfer-intrabank"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-correlationid"
										},
										{
											"key": "Max-Forwards",
											"value": "19"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 (), 1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-53ccd164b4f921600a9ef6b0 0; Id-53ccd164b5f9b7348e723b46 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:04:08 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2001700\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080812040929000001199\",\n    \"partnerReferenceNo\": \"2023071401231\",\n    \"amount\": {\n        \"value\": \"10000.57\",\n        \"currency\": \"IDR\"\n    },\n    \"beneficiaryAccountNo\": \"1720191001\",\n    \"currency\": \"IDR\",\n    \"customerReference\": \"10052019\",\n    \"sourceAccount\": \"17300100001\",\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\n    \"addInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"msgType\": \"R\",\n        \"channelId\": \"6018\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"POSTMAN\",\n        \"originalTimestamp\": \"2023-08-08T11:54:12+07:00\"\n    }\n}"
								}
							]
						},
						{
							"name": "RTGS Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"pm.request.headers.add({key:\"X-TIMESTAMP\",value:pm.collectionVariables.get(\"headerTimestamp\")});\r",
											"\r",
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = pm.collectionVariables.get(\"headerTimestamp\");\r",
											"//var time = \"2022-08-12T08:10:01+07:00\";\r",
											"//var accesstoken = \"zmChPLBvE51hj7sgOE9vlPiDZbGopZwKvo818EGyAheEJFmRzrSVzL\"; //change oauth token\r",
											"var accesstoken = pm.collectionVariables.get(\"accessToken\");\r",
											"var method = request.method;\r",
											"var secret = pm.collectionVariables.get(\"client-secret\");\r",
											"//var secret = \"1d83b23a-50be-4c0a-a851-0d67cc6db234\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var signature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"\r",
											"function randInt(min, max) {\r",
											"   return Math.round((Math.random() * Math.abs(max - min)) + min);\r",
											"}\r",
											"pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:randInt(100000000000000000, 999999999999999999)});\r",
											"//pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:\"111111111111111111\"});\r",
											"\r",
											"// pm.environment.set(\"signature\",signature);\r",
											"//pm.request.headers.add({key:\"X-TIMESTAMP\",value:time});\r",
											"pm.request.headers.add({key:\"X-SIGNATURE\",value:signature});\r",
											"pm.request.headers.add({key:\"Authorization\",value:\"Bearer \"+accesstoken});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"RC \" + responseCode.code + \". Please Check Your Request / Signature Again!\"] = responseCode.code !== 200 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2002300\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountName).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountType).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryBankCode).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.currency).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.customerReference).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.sourceAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.traceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionDate).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionStatus).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionStatusDesc).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-22T16:22:48+07:00",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-SIGNATURE",
										"value": "aa78a550bbd3875b0116be8ae539de0910654f69dd84d02237cbcd6118e65642d5b143131ae0350bc601674295e75404f89297159dd0c40fd558e5944308422f",
										"type": "text",
										"disabled": true
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CHANNEL-ID",
										"value": "{{channel-id}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \r\n    \"partnerReferenceNo\":\"2023071454111119\",\r\n    \"amount\":{\r\n        \"value\":\"62019\",\r\n        \"currency\":\"IDR\"\r\n    },\r\n    \"sourceAccountNo\":\"70000001060\",\r\n    \"beneficiaryAccountNo\":\"5361112223334\",\r\n    \"beneficiaryAccountName\":\"Yories Yolanda\",\r\n    \"beneficiaryAddress\":\"Alamat\",\r\n    \"beneficiaryBankCode\":\"002\",\r\n    \"beneficiaryBankName\":\"Bank BRI\",\r\n    \"beneficiaryCustomerResidence\":\"1\",\r\n    \"beneficiaryCustomerType\":\"1\",\r\n    \"beneficiaryEmail\":\"yories.yolanda@work.bri.co.id \",\r\n    \"currency\":\"IDR\",\r\n    \"customerReference\":\"10052019\",\r\n    \"feeType\":\"BEN\",\r\n    \"kodepos\":\"12250\",\r\n    \"receiverPhone\":\"080901020304\",\r\n    \"remark\":\"remark test rtgs\",\r\n    \"senderCustomerResidence\":\"1\",\r\n    \"senderCustomerType\":\"1\",\r\n    \"senderPhone\":\"080901020304\",\r\n    \"transactionDate\":\"2023-11-08T11:08:56+07:00\",\r\n    \"additionalInfo\":{\r\n        \"msgType\": \"N\",\r\n        \"senderCitizen\":\"W\",\r\n        \"registerId\":\"261AC700\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/transfer-rtgs",
									"host": [
										"{{ip-frontend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"transfer-rtgs"
									]
								}
							},
							"response": [
								{
									"name": "RTGS Normal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "{{headerTimestamp}}",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{signatureService}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    //\"partnerReferenceNo\":\"{{reffNumber}}\",\r\n    \"partnerReferenceNo\":\"2023071454341\",\r\n    \"amount\":{\r\n        \"value\":\"12033.13\",\r\n        \"currency\":\"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\":\"Nama Beneficiary\",\r\n    \"beneficiaryAccountNo\":\"1720191001\",\r\n    \"beneficiaryAddress\":\"Alamat\",\r\n    \"beneficiaryBankCode\":\"002\",\r\n    \"beneficiaryBankName\":\"Bank BRI\",\r\n    \"beneficiaryCustomerResidence\":\"1\",\r\n    \"beneficiaryCustomerType\":\"1\",\r\n    \"beneficiaryEmail\":\"yories.yolanda@work.bri.co.id \",\r\n    \"currency\":\"IDR\",\r\n    \"customerReference\":\"10052019\",\r\n    \"feeType\":\"BEN\",\r\n    \"kodepos\":\"12250\",\r\n    \"receiverPhone\":\"080901020304\",\r\n    \"remark\":\"remark test rtgs\",\r\n    \"senderCustomerResidence\":\"1\",\r\n    \"senderCustomerType\":\"1\",\r\n    \"senderPhone\":\"080901020304\",\r\n    \"sourceAccountNo\":\"17300100001\",\r\n    \"transactionDate\":\"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\":{\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6018\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\",\r\n        \"senderCitizen\":\"W\",\r\n        \"registerId\":\"261AC700\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/transfer-rtgs",
											"host": [
												"{{ip-frontend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"transfer-rtgs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-correlationid"
										},
										{
											"key": "Max-Forwards",
											"value": "19"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 (), 1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-00cdd164eef91ab71fb1856c 0; Id-00cdd164eff9b1cb60f0e147 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:07:01 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2002300\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080812070262000001201\",\n    \"partnerReferenceNo\": \"2023071454341\",\n    \"amount\": {\n        \"value\": \"12033.13\",\n        \"currency\": \"IDR\"\n    },\n    \"beneficiaryAccountName\": \"Nama Beneficiary\",\n    \"beneficiaryAccountNo\": \"1720191001\",\n    \"beneficiaryAccountType\": \" \",\n    \"beneficiaryBankCode\": \"002\",\n    \"currency\": \"IDR\",\n    \"customerReference\": \"10052019\",\n    \"sourceAccountNo\": \"17300100001\",\n    \"traceNo\": \" \",\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\n    \"transactionStatus\": \" \",\n    \"transactionStatusDesc\": \" \",\n    \"addInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"msgType\": \"R\",\n        \"channelId\": \"6018\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"POSTMAN\",\n        \"originalTimestamp\": \"2023-08-08T11:54:12+07:00\"\n    }\n}"
								}
							]
						},
						{
							"name": "SKN Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"// const moment = require('moment');\r",
											"// const today = moment();\r",
											"\r",
											"// //date\r",
											"// var todayDate = today.format('YYYYMMDD');\r",
											"// pm.globals.set(\"todayDate\", todayDate);\r",
											"\r",
											"// //time\r",
											"// var todayTime = today.format('Hmmss');\r",
											"// pm.globals.set(\"todayTime\", todayTime);\r",
											"\r",
											"// //trace number\r",
											"// var unixNumber = today.unix();\r",
											"// var unixStr = unixNumber.toString();\r",
											"// var traceNumber = unixStr.slice(-6);\r",
											"// traceNumber = parseInt(traceNumber);\r",
											"// pm.globals.set(\"traceNumber\", traceNumber);\r",
											"\r",
											"// //refference number\r",
											"// var reffDate = today.format('YYMMDD');\r",
											"// var reffNumber = reffDate.toString() + traceNumber.toString();\r",
											"// pm.globals.set(\"reffNumber\", reffNumber);\r",
											"\r",
											"\r",
											"\r",
											"pm.request.headers.add({key:\"X-TIMESTAMP\",value:pm.collectionVariables.get(\"headerTimestamp\")});\r",
											"\r",
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = pm.collectionVariables.get(\"headerTimestamp\");\r",
											"//var time = \"2022-08-12T08:10:01+07:00\";\r",
											"//var accesstoken = \"zmChPLBvE51hj7sgOE9vlPiDZbGopZwKvo818EGyAheEJFmRzrSVzL\"; //change oauth token\r",
											"var accesstoken = pm.collectionVariables.get(\"accessToken\");\r",
											"var method = request.method;\r",
											"var secret = pm.collectionVariables.get(\"client-secret\");\r",
											"//var secret = \"1d83b23a-50be-4c0a-a851-0d67cc6db234\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var signature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"\r",
											"function randInt(min, max) {\r",
											"   return Math.round((Math.random() * Math.abs(max - min)) + min);\r",
											"}\r",
											"pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:randInt(100000000000000000, 999999999999999999)});\r",
											"//pm.request.headers.add({key:\"X-EXTERNAL-ID\",value:1111111111111111});\r",
											"\r",
											"// pm.environment.set(\"signature\",signature);\r",
											"//pm.request.headers.add({key:\"X-TIMESTAMP\",value:time});\r",
											"pm.request.headers.add({key:\"X-SIGNATURE\",value:signature});\r",
											"pm.request.headers.add({key:\"Authorization\",value:\"Bearer \"+accesstoken});"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"RC \" + responseCode.code + \". Please Check Your Request / Signature Again!\"] = responseCode.code !== 200 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2002300\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountName).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountType).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryBankCode).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.currency).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.customerReference).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.sourceAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.traceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionDate).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionStatus).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionStatusDesc).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "noauth"
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-22T17:28:51+07:00",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-SIGNATURE",
										"value": "06f436ee915fd5624016f0fad8c0ba49e1ade5e539a569bc821b4c055c6edf524c7c2ae92a4b5ab6d0bdf2fbe307775b1e63647831739a54b0eac757e4345795",
										"type": "text",
										"disabled": true
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text",
										"disabled": true
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text",
										"disabled": true
									},
									{
										"key": "CHANNEL-ID",
										"value": "95221",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n   \r\n    \"partnerReferenceNo\": \"20230907111300\",\r\n    \"amount\": {\r\n        \"currency\": \"IDR\",\r\n        \"value\": \"81020\"\r\n    },\r\n    \"sourceAccountNo\": \"1400988504\",\r\n    \"beneficiaryAccountName\": \"Yories Yolanda\",\r\n    \"beneficiaryAccountNo\":\"0141234567890\",\r\n    \"beneficiaryAddress\": \"Jakarta\",\r\n    \"beneficiaryBankCode\": \"014\",\r\n    \"beneficiaryBankName\": \"BCA\",\r\n    \"beneficiaryCustomerResidence\": \"1\",\r\n    \"beneficiaryCustomerType\": \"1\",\r\n    \"beneficiaryEmail\": \"hendro@sci.go.id\",\r\n    \"currency\": \"IDR\",\r\n    \"customerReference\": \"2023090711490015\",\r\n    \"feeType\": \"OUR\",\r\n    \"kodepos\": \"16454\",\r\n    \"receiverPhone\": \"09222002\",\r\n    \"remark\": \"BPDPKS SIT\",\r\n    \"senderCustomerResidence\": \"1\",\r\n    \"senderCustomerType\": \"1\",\r\n    \"senderPhone\": \"0838239939393\",\r\n    \"transactionDate\": \"2023-11-08T09:50:30+07:00\",\r\n    \"additionalInfo\": {\r\n        \"beneficiaryCityCode\": \"16454\",\r\n        \"beneficiaryClearingAreaCode\": \"3600\",\r\n        \"beneficiaryProvinceCode\": \"3600\",\r\n        \"channel\": \"mobilephone\",\r\n        \r\n        \"deviceId\": \"12345679237\",\r\n        \r\n        \"msgType\": \"N\",\r\n        \"registerId\": \"261AC700\",\r\n        \"senderCitizen\": \"W\",\r\n\t\"senderTypeOfBussiness\":\"1\"\r\n        \r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/transfer-skn",
									"host": [
										"{{ip-frontend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"transfer-skn"
									]
								}
							},
							"response": [
								{
									"name": "SKN Normal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "{{headerTimestamp}}",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{signatureService}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    //\"partnerReferenceNo\":\"{{reffNumber}}\",\r\n    \"partnerReferenceNo\":\"2023071414355\",\r\n    \"amount\":{\r\n        \"value\":\"16033.12\",\r\n        \"currency\":\"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\":\"Nama Beneficiary\",\r\n    \"beneficiaryAccountNo\":\"1720191001\",\r\n    \"beneficiaryAddress\":\"Alamat\",\r\n    \"beneficiaryBankCode\":\"002\",\r\n    \"beneficiaryBankName\":\"Bank BRI\",\r\n    \"beneficiaryCustomerResidence\":\"1\",\r\n    \"beneficiaryCustomerType\":\"1\",\r\n    \"beneficiaryEmail\":\"yories.yolanda@work.bri.co.id \",\r\n    \"currency\":\"IDR\",\r\n    \"customerReference\":\"10052019\",\r\n    \"feeType\":\"BEN\",\r\n    \"kodepos\":\"12250\",\r\n    \"receiverPhone\":\"080901020304\",\r\n    \"remark\":\"remark test\",\r\n    \"senderCustomerResidence\":\"1\",\r\n    \"senderCustomerType\":\"1\",\r\n    \"senderPhone\":\"080901020304\",\r\n    \"sourceAccountNo\":\"17300100001\",\r\n    \"transactionDate\":\"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\":{\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6018\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\",\r\n        \"senderCitizen\":\"W\",\r\n        \"senderTypeOfBussiness\":\"1\",\r\n        \"beneficiaryCityCode\":\"3600\",\r\n        \"beneficiaryProvinceCode\":\"3600\",\r\n        \"beneficiaryClearingAreaCode\":\"3600\",\r\n        \"registerId\":\"261AC700\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-frontend-apim}}/bsb/snap-bi/v1.0/transfer-skn",
											"host": [
												"{{ip-frontend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"transfer-skn"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Access-Control-Expose-Headers",
											"value": "x-correlationid"
										},
										{
											"key": "Max-Forwards",
											"value": "19"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 (), 1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-08ced16450fa8a80ffaf0d7e 0; Id-08ced16451fa1a0c9549e295 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:11:25 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2002300\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080812112583000001204\",\n    \"partnerReferenceNo\": \"2023071414355\",\n    \"amount\": {\n        \"value\": \"16033.12\",\n        \"currency\": \"IDR\"\n    },\n    \"beneficiaryAccountName\": \"Nama Beneficiary\",\n    \"beneficiaryAccountNo\": \"1720191001\",\n    \"beneficiaryAccountType\": \" \",\n    \"beneficiaryBankCode\": \"002\",\n    \"currency\": \"IDR\",\n    \"customerReference\": \"10052019\",\n    \"sourceAccountNo\": \"17300100001\",\n    \"traceNo\": \" \",\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\n    \"transactionStatus\": \" \",\n    \"transactionStatusDesc\": \" \",\n    \"addInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"msgType\": \"R\",\n        \"channelId\": \"6018\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"POSTMAN\",\n        \"originalTimestamp\": \"2023-08-08T11:54:12+07:00\"\n    }\n}"
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "Backend APIM",
			"item": [
				{
					"name": "Non Transactional",
					"item": [
						{
							"name": "Internal Account Inquiry",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = request.headers[\"x-timestamp\"];\r",
											"var accesstoken = \"928031ae-6536-4664-bc55-0f88e932b171\"; //change oauth token\r",
											"var method = request.method;\r",
											"var secret = \"qkjkxv9j8mw3ryk6169im8qksowq9s9vh3za42pojy9nwzdxf3vxg0mk71fqztls\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var xsignature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"console.log( databody);\r",
											"console.log( \"string to sign \" + hmacdata);\r",
											"console.log( \"signature \" + xsignature);\r",
											"pm.environment.set(\"xsignature\",xsignature);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"Request with 400 Bad Request: \"+ responseCode.code] = responseCode.code === 400 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2001500\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountName).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountStatus).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountType).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.currency).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessTokenBVAPI}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-08T12:11:11+07:00",
										"type": "text"
									},
									{
										"key": "X-SIGNATURE",
										"value": "{{xsignature}}",
										"type": "text"
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text"
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text"
									},
									{
										"key": "CHANNEL-ID",
										"value": "95221",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"partnerReferenceNo\": \"2023071400001\",\r\n    \"beneficiaryAccountNo\": \"1701016063\",\r\n    \"additionalInfo\": {\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"IBTERM\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://206.189.152.0:8080/bsb/snap-bi/v1.0/account-inquiry-internal",
									"protocol": "http",
									"host": [
										"206",
										"189",
										"152",
										"0"
									],
									"port": "8080",
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"account-inquiry-internal"
									]
								}
							},
							"response": [
								{
									"name": "Internal Account Inquiry",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "2023-08-08T12:11:11+07:00",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{xsignature}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\": \"2023071400001\",\r\n    \"beneficiaryAccountNo\": \"1701016063\",\r\n    \"additionalInfo\": {\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"IBTERM\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://206.189.152.0:8080/bsb/snap-bi/v1.0/account-inquiry-internal",
											"protocol": "http",
											"host": [
												"206",
												"189",
												"152",
												"0"
											],
											"port": "8080",
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"account-inquiry-internal"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-dcced16496faf42834ebe45e 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:14:26 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2001500\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080812142781000001209\",\n    \"partnerReferenceNo\": \"2023071400001\",\n    \"beneficiaryAccountName\": \"XYZ\",\n    \"beneficiaryAccountNo\": \"1701016063\",\n    \"beneficiaryAccountStatus\": \"AKTIF\",\n    \"beneficiaryAccountType\": \"\",\n    \"currency\": \"IDR\",\n    \"additionalInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"channelId\": \"6014\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"IBTERM\"\n    }\n}"
								}
							]
						},
						{
							"name": "External Account Inquiry",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = request.headers[\"x-timestamp\"];\r",
											"var accesstoken = \"GbjYhknnL7kONqzevSMxCWHkIhhDMbh7d9NsIMNIQw3yep6Ahl212J\"; //change oauth token\r",
											"var method = request.method;\r",
											"var secret = \"6544c576-e6ca-4bce-86d2-332faa924686\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var signature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"console.log( databody);\r",
											"console.log( \"string to sign \" + hmacdata);\r",
											"console.log( \"signature \" + signature);\r",
											"pm.environment.set(\"signature\",signature);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"Request with 400 Bad Request: \"+ responseCode.code] = responseCode.code === 400 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2001600\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountName).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryBankCode).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessTokenBVAPI}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-08T12:11:11+07:00",
										"type": "text"
									},
									{
										"key": "X-SIGNATURE",
										"value": "{{xsignature}}",
										"type": "text"
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text"
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text"
									},
									{
										"key": "CHANNEL-ID",
										"value": "95221",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"beneficiaryBankCode\": \"536\",\r\n    \"beneficiaryAccountNo\": \"5361112223334\",\r\n    \"partnerReferenceNo\": \"2023080300000000000001\",\r\n    \"additionalInfo\": {\r\n        \"ATMCARDNUMBER\": \"62745217235000006\",\r\n        \"pcode\": \"320000\",\r\n        \"amount\": \"10000000\",\r\n        \"terminalId\": \"CIB00546\",\r\n        \"regid\": \"EDAB2801\",\r\n        \"destinationName\": \"\",\r\n        \"sourceBankCode\": \"120\",\r\n        \"issuerName\": \"\",\r\n        \"referenceNumber\": \"242424\",\r\n        \"filler\": \"\",\r\n        \"otpPinEncrypted\": \"57446556\",\r\n        \"accountFrom\": \"1406208215\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://206.189.152.0:8080/bsb/snap-bi/v1.0/account-inquiry-external",
									"protocol": "http",
									"host": [
										"206",
										"189",
										"152",
										"0"
									],
									"port": "8080",
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"account-inquiry-external"
									]
								}
							},
							"response": [
								{
									"name": "External Account Inquiry",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "2023-08-08T12:11:11+07:00",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{xsignature}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"beneficiaryBankCode\": \"536\",\r\n    \"beneficiaryAccountNo\": \"5361112223334\",\r\n    \"partnerReferenceNo\": \"2023080300000000000001\",\r\n    \"additionalInfo\": {\r\n        \"ATMCARDNUMBER\": \"62745217235000006\",\r\n        \"pcode\": \"320000\",\r\n        \"amount\": \"10000000\",\r\n        \"terminalId\": \"CIB00546\",\r\n        \"regid\": \"EDAB2801\",\r\n        \"destinationName\": \"\",\r\n        \"sourceBankCode\": \"120\",\r\n        \"issuerName\": \"\",\r\n        \"referenceNumber\": \"242424\",\r\n        \"filler\": \"\",\r\n        \"otpPinEncrypted\": \"57446556\",\r\n        \"accountFrom\": \"1406208215\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://206.189.152.0:8080/bsb/snap-bi/v1.0/account-inquiry-external",
											"protocol": "http",
											"host": [
												"206",
												"189",
												"152",
												"0"
											],
											"port": "8080",
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"account-inquiry-external"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-f2ced1649efae92ccf4c1114 0"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:13:22 GMT"
										},
										{
											"key": "X-REQUEST-ID",
											"value": "1691471602247"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2001600\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"242424\",\n    \"partnerReferenceNo\": \"2023080300000000000001\",\n    \"beneficiaryAccountName\": \"SDR FERSY\",\n    \"beneficiaryAccountNo\": \"5361112223334\",\n    \"beneficiaryBankCode\": \"536\"\n}"
								}
							]
						},
						{
							"name": "Balance Inquiry",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = request.headers[\"x-timestamp\"];\r",
											"var accesstoken = \"928031ae-6536-4664-bc55-0f88e932b171\"; //change oauth token\r",
											"var method = request.method;\r",
											"var secret = \"qkjkxv9j8mw3ryk6169im8qksowq9s9vh3za42pojy9nwzdxf3vxg0mk71fqztls\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var xsignature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"console.log( databody);\r",
											"console.log( \"string to sign \" + hmacdata);\r",
											"console.log( \"signature \" + xsignature);\r",
											"pm.environment.set(\"xsignature\",xsignature);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"Request with 400 Bad Request: \"+ responseCode.code] = responseCode.code === 400 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2001100\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.accountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.name).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessTokenBVAPI}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-08T12:11:11+07:00",
										"type": "text"
									},
									{
										"key": "X-SIGNATURE",
										"value": "{{xsignature}}",
										"type": "text"
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text"
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text"
									},
									{
										"key": "CHANNEL-ID",
										"value": "95221",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"partnerReferenceNo\": \"2023071400001\",\r\n    \"bankCardToken\": \"6d7963617264746f6b656e\",\r\n    \"accountNo\": \"1701016063\",\r\n    \"balanceType\": [\r\n        \"Balance\"\r\n    ],\r\n    \"additionalInfo\": {\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"IBTERM\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://206.189.152.0:8080/bsb/snap-bi/v1.0/balance-inquiry",
									"protocol": "http",
									"host": [
										"206",
										"189",
										"152",
										"0"
									],
									"port": "8080",
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"balance-inquiry"
									]
								}
							},
							"response": [
								{
									"name": "Balance Inquiry",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "2023-08-08T12:11:11+07:00",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{xsignature}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\": \"2023071400001\",\r\n    \"bankCardToken\": \"6d7963617264746f6b656e\",\r\n    \"accountNo\": \"1701016063\",\r\n    \"balanceType\": [\r\n        \"Balance\"\r\n    ],\r\n    \"additionalInfo\": {\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"IBTERM\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://206.189.152.0:8080/bsb/snap-bi/v1.0/balance-inquiry",
											"protocol": "http",
											"host": [
												"206",
												"189",
												"152",
												"0"
											],
											"port": "8080",
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"balance-inquiry"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-0acfd164a7fa055eac549555 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:15:13 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2001100\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080812151370000001210\",\n    \"partnerReferenceNo\": \"2023071400001\",\n    \"accountNo\": \"1701016063\",\n    \"name\": \"XYZ\",\n    \"accountInfo\": [\n        {\n            \"balanceType\": \"Balance\",\n            \"amount\": {\n                \"value\": \"76003501.00\",\n                \"currency\": \"IDR\"\n            },\n            \"floatAmount\": {\n                \"value\": \"0.00\",\n                \"currency\": \"IDR\"\n            },\n            \"holdAmount\": {\n                \"value\": \"0.00\",\n                \"currency\": \"IDR\"\n            },\n            \"availableBalance\": {\n                \"value\": \"75503501.00\",\n                \"currency\": \"IDR\"\n            },\n            \"ledgerBalance\": {\n                \"value\": \"76003501.00\",\n                \"currency\": \"IDR\"\n            },\n            \"currentMultilateralLimit\": {\n                \"value\": \"0.00\",\n                \"currency\": \"IDR\"\n            },\n            \"registrationStatusCode\": \"\",\n            \"status\": \"0\"\n        }\n    ],\n    \"additionalInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"channelId\": \"6014\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"IBTERM\"\n    }\n}"
								}
							]
						}
					]
				},
				{
					"name": "Transaction History",
					"item": [
						{
							"name": "Bank Statement - API Rekon MT940",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"Request with 400 Bad Request: \"+ responseCode.code] = responseCode.code === 400 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"pm.test(\"Body contains string\",() => {\r",
											"  pm.expect(pm.response.text());\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessTokenBVAPI}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-08T12:11:11+07:00",
										"type": "text"
									},
									{
										"key": "X-SIGNATURE",
										"value": "{{xsignature}}",
										"type": "text"
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text"
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text"
									},
									{
										"key": "CHANNEL-ID",
										"value": "95221",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"partnerReferenceNo\": \"2023071400001\",\r\n    \"accountNo\": \"1701016063\",\r\n    \"fromDateTime\": \"2019-07-11T00:00:00+07:00\",\r\n    \"toDateTime\": \"2019-07-13T00:00:00+07:00\",\r\n    \"additionalInfo\": {\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"IBTERM\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "http://206.189.152.0:8080/bsb/snap-bi/v1.0/bank-statement",
									"protocol": "http",
									"host": [
										"206",
										"189",
										"152",
										"0"
									],
									"port": "8080",
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"bank-statement"
									]
								}
							},
							"response": [
								{
									"name": "Bank Statement - API Rekon MT940",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "2023-08-08T12:11:11+07:00",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{xsignature}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\": \"2023071400001\",\r\n    \"accountNo\": \"1701016063\",\r\n    \"fromDateTime\": \"2019-07-11T00:00:00+07:00\",\r\n    \"toDateTime\": \"2019-07-13T00:00:00+07:00\",\r\n    \"additionalInfo\": {\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"IBTERM\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "http://206.189.152.0:8080/bsb/snap-bi/v1.0/bank-statement",
											"protocol": "http",
											"host": [
												"206",
												"189",
												"152",
												"0"
											],
											"port": "8080",
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"bank-statement"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "plain",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-20cfd164aefa57b6dcb2561b 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:15:35 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "text/plain; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{1:F01BANK SUMSEL}{2:I940XYZ){4:\r\n:20:2023080812153620\r\n:25:1701016063\r\n:28C:001\r\n:60F:C190711IDR4845605,00\r\n:61:190712D100000,00N\r\n:86:58515770|259|LETTA\r\n08011001112\r\n:61:190712D135000,00N\r\n:86:58517165|263|LETTA\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517166|263|LETTA\r\n08010166667\r\n:61:190712D135000,00N\r\n:86:58517169|263|SULI\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517170|263|SULI\r\n08010166667\r\n:61:190712D135000,00N\r\n:86:58517173|263|LETTA\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517174|263|LETTA\r\n08010166667\r\n:61:190712D135000,00N\r\n:86:58517177|263|SULI\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517178|263|SULI\r\n08010166667\r\n:61:190712D135000,00N\r\n:86:58517187|263|LETTA\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517188|263|LETTA\r\n08010166667\r\n:61:190712D135000,00N\r\n:86:58517195|263|LETTA\r\n08010121091\r\n:61:190712D250000,00N\r\n:86:58517196|263|LETTA\r\n08010166667\r\n:61:190712D120000,00N\r\n:86:58517280|277|INDI\r\n08010519031\r\n:61:190712D120000,00N\r\n:86:58517281|277|INDI\r\n08011028065\r\n:61:190712D120000,00N\r\n:86:58517282|277|INDI\r\n08012099999\r\n:61:190712D50000,00N\r\n:86:58517295|277|LETTA\r\n08019999998\r\n:61:190712D200000,00N\r\n:86:58517317|277|INDI\r\n08019991111\r\n:61:190712D300000,00N\r\n:86:58517334|277|LETTA\r\n08010519031\r\n:61:190712D300000,00N\r\n:86:58517335|277|LETTA\r\n08011028063\r\n:61:190712D300000,00N\r\n:86:58517336|277|LETTA\r\n08013007061\r\n:61:190712D300000,00N\r\n:86:58517338|277|LETTA\r\n08010519031\r\n:61:190712D300000,00N\r\n:86:58517339|277|LETTA\r\n08011028063\r\n:61:190712D300000,00N\r\n:86:58517340|277|LETTA\r\n08013007061\r\n:61:190712D300000,00N\r\n:86:58517342|277|INDI\r\n08010519031\r\n:61:190712D300000,00N\r\n:86:58517343|277|INDI\r\n08011028063\r\n:61:190712D300000,00N\r\n:86:58517344|277|INDI\r\n08013007061\r\n:61:190712D100000,00N\r\n:86:58517349|277|INDI\r\n08010519031\r\n:62F:D190713IDR-974395,00\r\n-}u0000\u0000"
								}
							]
						}
					]
				},
				{
					"name": "Transactional",
					"item": [
						{
							"name": "Interbank Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = request.headers[\"x-timestamp\"];\r",
											"var accesstoken = \"GbjYhknnL7kONqzevSMxCWHkIhhDMbh7d9NsIMNIQw3yep6Ahl212J\"; //change oauth token\r",
											"var method = request.method;\r",
											"var secret = \"6544c576-e6ca-4bce-86d2-332faa924686\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var signature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"console.log( databody);\r",
											"console.log( \"string to sign \" + hmacdata);\r",
											"console.log( \"signature \" + signature);\r",
											"pm.environment.set(\"signature\",signature);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"Request with 400 Bad Request: \"+ responseCode.code] = responseCode.code === 400 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2001800\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryBankCode).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.sourceAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.traceNo).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessTokenBVAPI}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-08T12:11:11+07:00",
										"type": "text"
									},
									{
										"key": "X-SIGNATURE",
										"value": "{{xsignature}}",
										"type": "text"
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text"
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text"
									},
									{
										"key": "CHANNEL-ID",
										"value": "95221",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"partnerReferenceNo\": \"2023080300000000000001\",\r\n    \"amount\": {\r\n        \"value\": \"5000.00\",\r\n        \"currency\": \"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\": \"\",\r\n    \"beneficiaryAccountNo\": \"5361112223334\",\r\n    \"beneficiaryBankCode\": \"536\",\r\n    \"beneficiaryBankName\": \"\",\r\n    \"customerReference\": \"242424\",\r\n    \"sourceAccountNo\": \"1400800625\",\r\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\": {\r\n        \"ATMCARDNUMBER\": \"62745217235000006\",\r\n        \"pcode\": \"401000\",\r\n        \"terminalId\": \"CIB00546\",\r\n        \"regid\": \"EDAB2801\",\r\n        \"destinationName\": \"\",\r\n        \"sourceBankCode\": \"120\",\r\n        \"issuerName\": \"\",\r\n        \"filler\": \"600100\",\r\n        \"otpPinEncrypted\": \"57446556\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-backend-apim}}/bsb/snap-bi/v1.0/transfer-interbank",
									"host": [
										"{{ip-backend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"transfer-interbank"
									]
								}
							},
							"response": [
								{
									"name": "Interbank Normal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "{{timestampISO8601}}",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{xsignature}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\": \"2023080300000000000001\",\r\n    \"amount\": {\r\n        \"value\": \"100000.00\",\r\n        \"currency\": \"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\": \"\",\r\n    \"beneficiaryAccountNo\": \"5361112223334\",\r\n    \"beneficiaryBankCode\": \"536\",\r\n    \"beneficiaryBankName\": \"\",\r\n    \"customerReference\": \"242424\",\r\n    \"sourceAccountNo\": \"1406208215\",\r\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\": {\r\n        \"ATMCARDNUMBER\": \"62745217235000006\",\r\n        \"pcode\": \"400000\",\r\n        \"terminalId\": \"CIB00546\",\r\n        \"regid\": \"EDAB2801\",\r\n        \"destinationName\": \"\",\r\n        \"sourceBankCode\": \"120\",\r\n        \"issuerName\": \"\",\r\n        \"filler\": \"\",\r\n        \"otpPinEncrypted\": \"57446556\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-backend-apim}}/bsb/snap-bi/v1.0/transfer-interbank",
											"host": [
												"{{ip-backend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"transfer-interbank"
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-5eced1646cfa261d78c43ed2 0"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:10:54 GMT"
										},
										{
											"key": "X-REQUEST-ID",
											"value": "1691471454194"
										},
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"4001812\",\n    \"responseMessage\": \"Transaction cannot be Processed [ist-12]. Contact Call Center 14083\"\n}"
								}
							]
						},
						{
							"name": "Intrabank Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"const today = moment();\r",
											"\r",
											"//date\r",
											"var todayDate = today.format('YYYYMMDD');\r",
											"pm.globals.set(\"todayDate\", todayDate);\r",
											"\r",
											"//time\r",
											"var todayTime = today.format('Hmmss');\r",
											"pm.globals.set(\"todayTime\", todayTime);\r",
											"\r",
											"//trace number\r",
											"var unixNumber = today.unix();\r",
											"var unixStr = unixNumber.toString();\r",
											"var traceNumber = unixStr.slice(-6);\r",
											"traceNumber = parseInt(traceNumber);\r",
											"pm.globals.set(\"traceNumber\", traceNumber);\r",
											"\r",
											"//refference number\r",
											"var reffDate = today.format('YYMMDD');\r",
											"var reffNumber = reffDate.toString() + traceNumber.toString();\r",
											"pm.globals.set(\"reffNumber\", reffNumber);\r",
											"\r",
											"\r",
											"\r",
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = request.headers[\"x-timestamp\"];\r",
											"var accesstoken = \"928031ae-6536-4664-bc55-0f88e932b171\"; //change oauth token\r",
											"var method = request.method;\r",
											"var secret = \"qkjkxv9j8mw3ryk6169im8qksowq9s9vh3za42pojy9nwzdxf3vxg0mk71fqztls\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var xsignature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"console.log( databody);\r",
											"console.log( \"string to sign \" + hmacdata);\r",
											"console.log( \"signature \" + xsignature);\r",
											"pm.environment.set(\"xsignature\",xsignature);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"Request with 400 Bad Request: \"+ responseCode.code] = responseCode.code === 400 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2001700\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.currency).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.customerReference).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.sourceAccount).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionDate).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessTokenBVAPI}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-08T12:11:11+07:00",
										"type": "text"
									},
									{
										"key": "X-SIGNATURE",
										"value": "{{xsignature}}",
										"type": "text"
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text"
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text"
									},
									{
										"key": "CHANNEL-ID",
										"value": "95221",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"partnerReferenceNo\": \"20230803123000001\",\r\n    \"amount\": {\r\n        \"value\": \"10000.57\",\r\n        \"currency\": \"IDR\"\r\n    },\r\n    \"beneficiaryAccountNo\": \"1739990001\",\r\n    \"beneficiaryEmail\": \"yories.yolanda@work.bri.co.id \",\r\n    \"currency\": \"IDR\",\r\n    \"customerReference\": \"10052019\",\r\n    \"feeType\": \"BEN\",\r\n    \"remark\": \"remark test\",\r\n    \"sourceAccountNo\": \"17300100001\",\r\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\": {\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-backend-apim}}/bsb/snap-bi/v1.0/transfer-intrabank",
									"host": [
										"{{ip-backend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"transfer-intrabank"
									]
								}
							},
							"response": [
								{
									"name": "Intrabank Normal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "2023-08-08T12:11:11+07:00",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{xsignature}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\": \"{{reffNumber}}\",\r\n    \"amount\": {\r\n        \"value\": \"10000.57\",\r\n        \"currency\": \"IDR\"\r\n    },\r\n    \"beneficiaryAccountNo\": \"1720191001\",\r\n    \"beneficiaryEmail\": \"yories.yolanda@work.bri.co.id \",\r\n    \"currency\": \"IDR\",\r\n    \"customerReference\": \"10052019\",\r\n    \"feeType\": \"BEN\",\r\n    \"remark\": \"remark test\",\r\n    \"sourceAccountNo\": \"17300100001\",\r\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\": {\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-backend-apim}}/bsb/snap-bi/v1.0/transfer-intrabank",
											"host": [
												"{{ip-backend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"transfer-intrabank"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-0bd2d1649bfbe4fd395dbcf7 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:28:02 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2001700\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080812280283000001216\",\n    \"partnerReferenceNo\": \"230808472395\",\n    \"amount\": {\n        \"value\": \"10000.57\",\n        \"currency\": \"IDR\"\n    },\n    \"beneficiaryAccountNo\": \"1720191001\",\n    \"currency\": \"IDR\",\n    \"customerReference\": \"10052019\",\n    \"sourceAccount\": \"17300100001\",\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\n    \"addInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"msgType\": \"N\",\n        \"channelId\": \"6014\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"POSTMAN\"\n    }\n}"
								},
								{
									"name": "Intrabank Normal Reversal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "{{timestampISO8601}}",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{xsignature}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\":\"{{reffNumber}}\",\r\n    \"amount\":{\r\n        \"value\":\"10000.57\",\r\n        \"currency\":\"IDR\"\r\n    },\r\n    \"beneficiaryAccountNo\":\"1720191001\",\r\n    \"beneficiaryEmail\":\"yories.yolanda@work.bri.co.id \",\r\n    \"currency\":\"IDR\",\r\n    \"customerReference\":\"10052019\",\r\n    \"feeType\":\"BEN\",\r\n    \"remark\":\"remark test\",\r\n    \"sourceAccountNo\":\"17300100001\",\r\n    \"transactionDate\":\"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\":{\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6018\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-backend-apim}}/bsb/snap-bi/v1.0/transfer-intrabank",
											"host": [
												"{{ip-backend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"transfer-intrabank"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-f0bad06466e2a6b743f44875 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Mon, 07 Aug 2023 09:37:39 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2001700\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080716373998000001163\",\n    \"partnerReferenceNo\": \"230807400944\",\n    \"amount\": {\n        \"value\": \"10000.57\",\n        \"currency\": \"IDR\"\n    },\n    \"beneficiaryAccountNo\": \"1720191001\",\n    \"currency\": \"IDR\",\n    \"customerReference\": \"10052019\",\n    \"sourceAccount\": \"17300100001\",\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\n    \"addInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"msgType\": \"R\",\n        \"channelId\": \"6018\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"POSTMAN\",\n        \"originalTimestamp\": \"2023-08-07T16:35:44+07:00\"\n    }\n}"
								}
							]
						},
						{
							"name": "RTGS Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"const today = moment();\r",
											"\r",
											"//date\r",
											"var todayDate = today.format('YYYYMMDD');\r",
											"pm.globals.set(\"todayDate\", todayDate);\r",
											"\r",
											"//time\r",
											"var todayTime = today.format('Hmmss');\r",
											"pm.globals.set(\"todayTime\", todayTime);\r",
											"\r",
											"//trace number\r",
											"var unixNumber = today.unix();\r",
											"var unixStr = unixNumber.toString();\r",
											"var traceNumber = unixStr.slice(-6);\r",
											"traceNumber = parseInt(traceNumber);\r",
											"pm.globals.set(\"traceNumber\", traceNumber);\r",
											"\r",
											"//refference number\r",
											"var reffDate = today.format('YYMMDD');\r",
											"var reffNumber = reffDate.toString() + traceNumber.toString();\r",
											"pm.globals.set(\"reffNumber\", reffNumber);\r",
											"\r",
											"\r",
											"\r",
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = request.headers[\"x-timestamp\"];\r",
											"var accesstoken = \"928031ae-6536-4664-bc55-0f88e932b171\"; //change oauth token\r",
											"var method = request.method;\r",
											"var secret = \"qkjkxv9j8mw3ryk6169im8qksowq9s9vh3za42pojy9nwzdxf3vxg0mk71fqztls\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var xsignature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"console.log( databody);\r",
											"console.log( \"string to sign \" + hmacdata);\r",
											"console.log( \"signature \" + xsignature);\r",
											"pm.environment.set(\"xsignature\",xsignature);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"Request with 400 Bad Request: \"+ responseCode.code] = responseCode.code === 400 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2002300\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountName).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountType).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryBankCode).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.currency).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.customerReference).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.sourceAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.traceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionDate).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionStatus).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionStatusDesc).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessTokenBVAPI}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-08T12:11:11+07:00",
										"type": "text"
									},
									{
										"key": "X-SIGNATURE",
										"value": "{{xsignature}}",
										"type": "text"
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text"
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text"
									},
									{
										"key": "CHANNEL-ID",
										"value": "95221",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"partnerReferenceNo\":\"{{reffNumber}}\",\r\n    \"amount\":{\r\n        \"value\":\"12033.13\",\r\n        \"currency\":\"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\":\"Nama Beneficiary\",\r\n    \"beneficiaryAccountNo\":\"1720191001\",\r\n    \"beneficiaryAddress\":\"Alamat\",\r\n    \"beneficiaryBankCode\":\"002\",\r\n    \"beneficiaryBankName\":\"Bank BRI\",\r\n    \"beneficiaryCustomerResidence\":\"1\",\r\n    \"beneficiaryCustomerType\":\"1\",\r\n    \"beneficiaryEmail\":\"yories.yolanda@work.bri.co.id \",\r\n    \"currency\":\"IDR\",\r\n    \"customerReference\":\"10052019\",\r\n    \"feeType\":\"BEN\",\r\n    \"kodepos\":\"12250\",\r\n    \"receiverPhone\":\"080901020304\",\r\n    \"remark\":\"remark test rtgs\",\r\n    \"senderCustomerResidence\":\"1\",\r\n    \"senderCustomerType\":\"1\",\r\n    \"senderPhone\":\"080901020304\",\r\n    \"sourceAccountNo\":\"17300100001\",\r\n    \"transactionDate\":\"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\":{\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\",\r\n        \"senderCitizen\":\"W\",\r\n        \"registerId\":\"261AC700\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-backend-apim}}/bsb/snap-bi/v1.0/transfer-rtgs",
									"host": [
										"{{ip-backend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"transfer-rtgs"
									]
								}
							},
							"response": [
								{
									"name": "RTGS Normal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "2023-08-08T12:11:11+07:00",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{xsignature}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\":\"{{reffNumber}}\",\r\n    \"amount\":{\r\n        \"value\":\"12033.13\",\r\n        \"currency\":\"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\":\"Nama Beneficiary\",\r\n    \"beneficiaryAccountNo\":\"1720191001\",\r\n    \"beneficiaryAddress\":\"Alamat\",\r\n    \"beneficiaryBankCode\":\"002\",\r\n    \"beneficiaryBankName\":\"Bank BRI\",\r\n    \"beneficiaryCustomerResidence\":\"1\",\r\n    \"beneficiaryCustomerType\":\"1\",\r\n    \"beneficiaryEmail\":\"yories.yolanda@work.bri.co.id \",\r\n    \"currency\":\"IDR\",\r\n    \"customerReference\":\"10052019\",\r\n    \"feeType\":\"BEN\",\r\n    \"kodepos\":\"12250\",\r\n    \"receiverPhone\":\"080901020304\",\r\n    \"remark\":\"remark test rtgs\",\r\n    \"senderCustomerResidence\":\"1\",\r\n    \"senderCustomerType\":\"1\",\r\n    \"senderPhone\":\"080901020304\",\r\n    \"sourceAccountNo\":\"17300100001\",\r\n    \"transactionDate\":\"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\":{\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\",\r\n        \"senderCitizen\":\"W\",\r\n        \"registerId\":\"261AC700\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-backend-apim}}/bsb/snap-bi/v1.0/transfer-rtgs",
											"host": [
												"{{ip-backend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"transfer-rtgs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-2bd2d164a6fbe796bc5911c9 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:28:34 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2002300\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080812283484000001217\",\n    \"partnerReferenceNo\": \"230808472427\",\n    \"amount\": {\n        \"value\": \"12033.13\",\n        \"currency\": \"IDR\"\n    },\n    \"beneficiaryAccountName\": \"Nama Beneficiary\",\n    \"beneficiaryAccountNo\": \"1720191001\",\n    \"beneficiaryAccountType\": \" \",\n    \"beneficiaryBankCode\": \"002\",\n    \"currency\": \"IDR\",\n    \"customerReference\": \"10052019\",\n    \"sourceAccountNo\": \"17300100001\",\n    \"traceNo\": \" \",\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\n    \"transactionStatus\": \" \",\n    \"transactionStatusDesc\": \" \",\n    \"addInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"msgType\": \"N\",\n        \"channelId\": \"6014\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"POSTMAN\"\n    }\n}"
								},
								{
									"name": "RTGS Normal Reversal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "2023-08-08T12:11:11+07:00",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{xsignature}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\":\"{{reffNumber}}\",\r\n    \"amount\":{\r\n        \"value\":\"12033.13\",\r\n        \"currency\":\"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\":\"Nama Beneficiary\",\r\n    \"beneficiaryAccountNo\":\"1720191001\",\r\n    \"beneficiaryAddress\":\"Alamat\",\r\n    \"beneficiaryBankCode\":\"002\",\r\n    \"beneficiaryBankName\":\"Bank BRI\",\r\n    \"beneficiaryCustomerResidence\":\"1\",\r\n    \"beneficiaryCustomerType\":\"1\",\r\n    \"beneficiaryEmail\":\"yories.yolanda@work.bri.co.id \",\r\n    \"currency\":\"IDR\",\r\n    \"customerReference\":\"10052019\",\r\n    \"feeType\":\"BEN\",\r\n    \"kodepos\":\"12250\",\r\n    \"receiverPhone\":\"080901020304\",\r\n    \"remark\":\"remark test rtgs\",\r\n    \"senderCustomerResidence\":\"1\",\r\n    \"senderCustomerType\":\"1\",\r\n    \"senderPhone\":\"080901020304\",\r\n    \"sourceAccountNo\":\"17300100001\",\r\n    \"transactionDate\":\"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\":{\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6018\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\",\r\n        \"senderCitizen\":\"W\",\r\n        \"registerId\":\"261AC700\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-backend-apim}}/bsb/snap-bi/v1.0/transfer-rtgs",
											"host": [
												"{{ip-backend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"transfer-rtgs"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-8fcfd164d4fab1b128221fb8 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:17:56 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2002300\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080812175679000001214\",\n    \"partnerReferenceNo\": \"230808471759\",\n    \"amount\": {\n        \"value\": \"12033.13\",\n        \"currency\": \"IDR\"\n    },\n    \"beneficiaryAccountName\": \"Nama Beneficiary\",\n    \"beneficiaryAccountNo\": \"1720191001\",\n    \"beneficiaryAccountType\": \" \",\n    \"beneficiaryBankCode\": \"002\",\n    \"currency\": \"IDR\",\n    \"customerReference\": \"10052019\",\n    \"sourceAccountNo\": \"17300100001\",\n    \"traceNo\": \" \",\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\n    \"transactionStatus\": \" \",\n    \"transactionStatusDesc\": \" \",\n    \"addInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"msgType\": \"R\",\n        \"channelId\": \"6018\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"POSTMAN\",\n        \"originalTimestamp\": \"2023-08-08T12:11:11+07:00\"\n    }\n}"
								}
							]
						},
						{
							"name": "SKN Normal",
							"event": [
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const moment = require('moment');\r",
											"const today = moment();\r",
											"\r",
											"//date\r",
											"var todayDate = today.format('YYYYMMDD');\r",
											"pm.globals.set(\"todayDate\", todayDate);\r",
											"\r",
											"//time\r",
											"var todayTime = today.format('Hmmss');\r",
											"pm.globals.set(\"todayTime\", todayTime);\r",
											"\r",
											"//trace number\r",
											"var unixNumber = today.unix();\r",
											"var unixStr = unixNumber.toString();\r",
											"var traceNumber = unixStr.slice(-6);\r",
											"traceNumber = parseInt(traceNumber);\r",
											"pm.globals.set(\"traceNumber\", traceNumber);\r",
											"\r",
											"//refference number\r",
											"var reffDate = today.format('YYMMDD');\r",
											"var reffNumber = reffDate.toString() + traceNumber.toString();\r",
											"pm.globals.set(\"reffNumber\", reffNumber);\r",
											"\r",
											"\r",
											"var databody=request.data;\r",
											"databody = JSON.stringify(JSON.parse(databody))\r",
											"\r",
											"var sha256 =  CryptoJS.enc.Hex.stringify(CryptoJS.SHA256(databody));\r",
											"var time = request.headers[\"x-timestamp\"];\r",
											"var accesstoken = \"928031ae-6536-4664-bc55-0f88e932b171\"; //change oauth token\r",
											"var method = request.method;\r",
											"var secret = \"qkjkxv9j8mw3ryk6169im8qksowq9s9vh3za42pojy9nwzdxf3vxg0mk71fqztls\"; //refer to credential docs\r",
											"\r",
											"\r",
											"var path = pm.request.url.getPath();\r",
											"var hmacdata=method+':'+path+':'+accesstoken+':'+sha256+':'+time;\r",
											"var xsignature=CryptoJS.enc.Hex.stringify(CryptoJS.HmacSHA512(hmacdata, secret));\r",
											"console.log( databody);\r",
											"console.log( \"string to sign \" + hmacdata);\r",
											"console.log( \"signature \" + xsignature);\r",
											"pm.environment.set(\"xsignature\",xsignature);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "test",
									"script": {
										"exec": [
											"pass=true;\r",
											"fail=false;\r",
											"try{\r",
											"    if(responseCode.code === 200)\r",
											"    {\r",
											"        var jsonData = pm.response.json();\r",
											"        tests[\"Request with 200 status ok : \"+ responseCode.code] = responseCode.code === 200 === true;\r",
											"\r",
											"    }else if(responseCode.code !== 200){\r",
											"        console.error(\"Web-service failed\");\r",
											"        tests[\"Request with 400 Bad Request: \"+ responseCode.code] = responseCode.code === 400 === false;\r",
											"    }\r",
											"}catch(err){\r",
											"    console.log(\"Something went wrong please contact to your Admin...!\"+err);\r",
											"}\r",
											"\r",
											"pm.test(\"Response has a JSON body\", function () {\r",
											"    pm.response.to.be.json;\r",
											"});\r",
											"\r",
											"pm.test(\"Response time is less than 3000ms\", () => {\r",
											"  pm.expect(pm.response.responseTime).to.be.below(3000);\r",
											"});\r",
											"\r",
											"pm.test(\"Content-Type header is present\", () => {\r",
											"  pm.response.to.have.header(\"Content-Type\");\r",
											"});\r",
											"\r",
											"\r",
											"pm.test(\"JSON Validator\", () => {\r",
											"    //parse the response JSON and test three properties\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.responseCode).to.eql(\"2002300\");\r",
											"    pm.expect(jsonData.responseMessage).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.referenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.partnerReferenceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountName).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryAccountType).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.beneficiaryBankCode).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.currency).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.customerReference).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.sourceAccountNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.traceNo).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionDate).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionStatus).to.be.a(\"string\");\r",
											"    pm.expect(jsonData.transactionStatusDesc).to.be.a(\"string\");\r",
											"});\t"
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disabledSystemHeaders": {}
							},
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{AccessTokenBVAPI}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [
									{
										"key": "X-TIMESTAMP",
										"value": "2023-08-08T12:11:11+07:00",
										"type": "text"
									},
									{
										"key": "X-SIGNATURE",
										"value": "{{xsignature}}",
										"type": "text"
									},
									{
										"key": "ORIGIN",
										"value": "www.hostname.com",
										"type": "text"
									},
									{
										"key": "X-PARTNER-ID",
										"value": "{{client-id}}",
										"type": "text"
									},
									{
										"key": "X-EXTERNAL-ID",
										"value": "41807553358950093184162180797837",
										"type": "text"
									},
									{
										"key": "CHANNEL-ID",
										"value": "95221",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"partnerReferenceNo\":\"{{reffNumber}}\",\r\n    \"amount\":{\r\n        \"value\":\"16033.12\",\r\n        \"currency\":\"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\":\"Nama Beneficiary\",\r\n    \"beneficiaryAccountNo\":\"1720191001\",\r\n    \"beneficiaryAddress\":\"Alamat\",\r\n    \"beneficiaryBankCode\":\"002\",\r\n    \"beneficiaryBankName\":\"Bank BRI\",\r\n    \"beneficiaryCustomerResidence\":\"1\",\r\n    \"beneficiaryCustomerType\":\"1\",\r\n    \"beneficiaryEmail\":\"yories.yolanda@work.bri.co.id \",\r\n    \"currency\":\"IDR\",\r\n    \"customerReference\":\"10052019\",\r\n    \"feeType\":\"BEN\",\r\n    \"kodepos\":\"12250\",\r\n    \"receiverPhone\":\"080901020304\",\r\n    \"remark\":\"remark test\",\r\n    \"senderCustomerResidence\":\"1\",\r\n    \"senderCustomerType\":\"1\",\r\n    \"senderPhone\":\"080901020304\",\r\n    \"sourceAccountNo\":\"17300100001\",\r\n    \"transactionDate\":\"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\":{\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\",\r\n        \"senderCitizen\":\"W\",\r\n        \"senderTypeOfBussiness\":\"1\",\r\n        \"beneficiaryCityCode\":\"3600\",\r\n        \"beneficiaryProvinceCode\":\"3600\",\r\n        \"beneficiaryClearingAreaCode\":\"3600\",\r\n        \"registerId\":\"261AC700\"\r\n    }\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{ip-backend-apim}}/bsb/snap-bi/v1.0/transfer-skn",
									"host": [
										"{{ip-backend-apim}}"
									],
									"path": [
										"bsb",
										"snap-bi",
										"v1.0",
										"transfer-skn"
									]
								}
							},
							"response": [
								{
									"name": "SKN Normal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "2023-08-08T12:11:11+07:00",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{xsignature}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\":\"{{reffNumber}}\",\r\n    \"amount\":{\r\n        \"value\":\"16033.12\",\r\n        \"currency\":\"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\":\"Nama Beneficiary\",\r\n    \"beneficiaryAccountNo\":\"1720191001\",\r\n    \"beneficiaryAddress\":\"Alamat\",\r\n    \"beneficiaryBankCode\":\"002\",\r\n    \"beneficiaryBankName\":\"Bank BRI\",\r\n    \"beneficiaryCustomerResidence\":\"1\",\r\n    \"beneficiaryCustomerType\":\"1\",\r\n    \"beneficiaryEmail\":\"yories.yolanda@work.bri.co.id \",\r\n    \"currency\":\"IDR\",\r\n    \"customerReference\":\"10052019\",\r\n    \"feeType\":\"BEN\",\r\n    \"kodepos\":\"12250\",\r\n    \"receiverPhone\":\"080901020304\",\r\n    \"remark\":\"remark test\",\r\n    \"senderCustomerResidence\":\"1\",\r\n    \"senderCustomerType\":\"1\",\r\n    \"senderPhone\":\"080901020304\",\r\n    \"sourceAccountNo\":\"17300100001\",\r\n    \"transactionDate\":\"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\":{\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6014\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\",\r\n        \"senderCitizen\":\"W\",\r\n        \"senderTypeOfBussiness\":\"1\",\r\n        \"beneficiaryCityCode\":\"3600\",\r\n        \"beneficiaryProvinceCode\":\"3600\",\r\n        \"beneficiaryClearingAreaCode\":\"3600\",\r\n        \"registerId\":\"261AC700\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-backend-apim}}/bsb/snap-bi/v1.0/transfer-skn",
											"host": [
												"{{ip-backend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"transfer-skn"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-4fd2d164b3fb6d3616d93991 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Tue, 08 Aug 2023 05:29:10 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2002300\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080812291064000001219\",\n    \"partnerReferenceNo\": \"230808472463\",\n    \"amount\": {\n        \"value\": \"16033.12\",\n        \"currency\": \"IDR\"\n    },\n    \"beneficiaryAccountName\": \"Nama Beneficiary\",\n    \"beneficiaryAccountNo\": \"1720191001\",\n    \"beneficiaryAccountType\": \" \",\n    \"beneficiaryBankCode\": \"002\",\n    \"currency\": \"IDR\",\n    \"customerReference\": \"10052019\",\n    \"sourceAccountNo\": \"17300100001\",\n    \"traceNo\": \" \",\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\n    \"transactionStatus\": \" \",\n    \"transactionStatusDesc\": \" \",\n    \"addInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"msgType\": \"N\",\n        \"channelId\": \"6014\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"POSTMAN\"\n    }\n}"
								},
								{
									"name": "SKN Normal Reversal",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "X-TIMESTAMP",
												"value": "{{timestampISO8601}}",
												"type": "text"
											},
											{
												"key": "X-SIGNATURE",
												"value": "{{xsignature}}",
												"type": "text"
											},
											{
												"key": "ORIGIN",
												"value": "www.hostname.com",
												"type": "text"
											},
											{
												"key": "X-PARTNER-ID",
												"value": "{{client-id}}",
												"type": "text"
											},
											{
												"key": "X-EXTERNAL-ID",
												"value": "41807553358950093184162180797837",
												"type": "text"
											},
											{
												"key": "CHANNEL-ID",
												"value": "95221",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"partnerReferenceNo\":\"{{reffNumber}}\",\r\n    \"amount\":{\r\n        \"value\":\"16033.12\",\r\n        \"currency\":\"IDR\"\r\n    },\r\n    \"beneficiaryAccountName\":\"Nama Beneficiary\",\r\n    \"beneficiaryAccountNo\":\"1720191001\",\r\n    \"beneficiaryAddress\":\"Alamat\",\r\n    \"beneficiaryBankCode\":\"002\",\r\n    \"beneficiaryBankName\":\"Bank BRI\",\r\n    \"beneficiaryCustomerResidence\":\"1\",\r\n    \"beneficiaryCustomerType\":\"1\",\r\n    \"beneficiaryEmail\":\"yories.yolanda@work.bri.co.id \",\r\n    \"currency\":\"IDR\",\r\n    \"customerReference\":\"10052019\",\r\n    \"feeType\":\"BEN\",\r\n    \"kodepos\":\"12250\",\r\n    \"receiverPhone\":\"080901020304\",\r\n    \"remark\":\"remark test\",\r\n    \"senderCustomerResidence\":\"1\",\r\n    \"senderCustomerType\":\"1\",\r\n    \"senderPhone\":\"080901020304\",\r\n    \"sourceAccountNo\":\"17300100001\",\r\n    \"transactionDate\":\"2019-07-03T12:08:56-07:00\",\r\n    \"additionalInfo\":{\r\n        \"msgType\": \"N\",\r\n        \"channelId\": \"6018\",\r\n        \"forwarderId\": \"627452\",\r\n        \"terminalId\": \"POSTMAN\",\r\n        \"senderCitizen\":\"W\",\r\n        \"senderTypeOfBussiness\":\"1\",\r\n        \"beneficiaryCityCode\":\"3600\",\r\n        \"beneficiaryProvinceCode\":\"3600\",\r\n        \"beneficiaryClearingAreaCode\":\"3600\",\r\n        \"registerId\":\"261AC700\"\r\n    }\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{ip-backend-apim}}/bsb/snap-bi/v1.0/transfer-skn",
											"host": [
												"{{ip-backend-apim}}"
											],
											"path": [
												"bsb",
												"snap-bi",
												"v1.0",
												"transfer-skn"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Max-Forwards",
											"value": "20"
										},
										{
											"key": "Via",
											"value": "1.0 KPS-APIP-DC01 ()"
										},
										{
											"key": "Connection",
											"value": "close"
										},
										{
											"key": "X-CorrelationID",
											"value": "Id-15bbd06473e2979ead79d5ce 0"
										},
										{
											"key": "Access-Control-Allow-Headers",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Methods",
											"value": "*"
										},
										{
											"key": "Access-Control-Allow-Origin",
											"value": "*"
										},
										{
											"key": "Access-Control-Max-Age",
											"value": "1000"
										},
										{
											"key": "Date",
											"value": "Mon, 07 Aug 2023 09:38:16 GMT"
										},
										{
											"key": "Server",
											"value": "Apache"
										},
										{
											"key": "Content-Type",
											"value": "application/json; charset=utf-8"
										}
									],
									"cookie": [],
									"body": "{\n    \"responseCode\": \"2002300\",\n    \"responseMessage\": \"Request has been processed successfully\",\n    \"referenceNo\": \"2023080716381724000001166\",\n    \"partnerReferenceNo\": \"230807400981\",\n    \"amount\": {\n        \"value\": \"16033.12\",\n        \"currency\": \"IDR\"\n    },\n    \"beneficiaryAccountName\": \"Nama Beneficiary\",\n    \"beneficiaryAccountNo\": \"1720191001\",\n    \"beneficiaryAccountType\": \" \",\n    \"beneficiaryBankCode\": \"002\",\n    \"currency\": \"IDR\",\n    \"customerReference\": \"10052019\",\n    \"sourceAccountNo\": \"17300100001\",\n    \"traceNo\": \" \",\n    \"transactionDate\": \"2019-07-03T12:08:56-07:00\",\n    \"transactionStatus\": \" \",\n    \"transactionStatusDesc\": \" \",\n    \"addInfo\": {\n        \"responseCode\": \"00\",\n        \"responseID\": \"0000000\",\n        \"responseMessage\": \"Success\",\n        \"msgType\": \"R\",\n        \"channelId\": \"6018\",\n        \"forwarderId\": \"627452\",\n        \"terminalId\": \"POSTMAN\",\n        \"originalTimestamp\": \"2023-08-07T16:36:21+07:00\"\n    }\n}"
								}
							]
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					"const moment = require('moment');",
					"",
					"var ISO_8601_OFFSET = 'YYYY-MM-DDTHH:mm:ss+07:00';",
					"var timestamp = moment().format(ISO_8601_OFFSET);",
					"//var timestamp = moment().subtract(10, \"minutes\").format(ISO_8601_OFFSET);",
					"pm.environment.set(\"timestampISO8601\", timestamp);"
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "client-id",
			"value": "e37c947e-002d-446a-9f92-4ed143786fe4",
			"type": "string"
		},
		{
			"key": "client-secret-bvapi",
			"value": "qkjkxv9j8mw3ryk6169im8qksowq9s9vh3za42pojy9nwzdxf3vxg0mk71fqztls",
			"type": "string",
			"disabled": true
		},
		{
			"key": "private-key",
			"value": "MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCcPpf8mK9OgJD9a26gy83ent9a879NL+Pn7LS/8gkOXtQf+PduKVXcJeYvwaTtgY9yC9i1AeVOSAfaH5KS+sWOxjVuZ3t/iNGlKMc6FIAfrDDh3+PkYzDcKAu0HjeF+lp4vSsVBW558/0TGUiZryIFlM1NiaaABLf8J0WCgHfMn4c7QGg7rie6aT4EZDitjN4UTOtvXnJeFExyCcLaehtru870YSCU2zyW9v8IetILm8t3+BQ2er8V9YiY4VYFn77cPVnWE2CGghZS8UpegBIYcu8XvSPiz7B5MG21SuQ4tjYC/R8NyBXKTRPQPOhpM2DeUOE6JL4TW7lQcRBBgIYfAgMBAAECggEAAzJwr7V8GNIepWDWYanp6306usS0DGNHeY5pYGgWcVnVY1YX0gQ8goWwARgoRMfa5I2DgKiqRYDJ0FfHCwTgl/xMSZcKeuCU0ZlVAkY7HOrMEUMgiaLR9B9JpgTcQ/yMb14HjKWQziQE8KgayTJBMvYJgWWop4PxM9Kl5Ha2fNRanCWsQXxn2peOR6ghGj/j5uyGgv634qAnVJEaKkUKKgqTxT7zIWwkD+nGfUZpoOf/NIjEiznfVKGLVvFrmtNI8EmEkfnMBEPu2+82kWKF42vSj7V8/4hYQuEfIpQ9FhWj6b9nmT153HiSAVFck/fgpFZoJyeYkwTWs2R0mt1SCQKBgQDZxqk51ZIpv6qv8Ff/4lyq6CnzjEKcbM+lZ4waKtk0J9/MhqR0uukm848FJsfGEK+88ig6K56m3FJHOCV/AYp1Bwqw+YEDxDJFMyYewEhwki+q3RPoKq1rocCvRb828M2+VcZorujpsOCf/91jDjvyp0OIa6fTtrnLFJnHc4BAlQKBgQC3qyJ2h5T1lIiN2Mo3MbRGfTA/kSrwmmZzXB1N77uL/5DUdHjUQGiK142yqltACR7QwoYmBdEbX9eRdru8PiN10nAoSkU9P42lPfFBREjzbqVkxaDjtZYvm81Ig+acOpjclwIl7OOLLcSO8YUmCDgHqNIS1ENQkW8DYTpc+q+64wKBgErejKFQdm6Z8VGJXIehR+CN7pZHe0MR+ZVQ8w6v+np+1ucWxwVGmQ+GHn5T5cyHQhPAYOoWwvV0u2i2udVfLz2qjRdov90On4XA3vMlggIJkA+677QasAJX2smnPeTihqlQDeVBdNuarq7zJSZ/50Y2EPaepFUZ9egGjhPO9qG9AoGATF/JcOhoNMaTEgj37YOppzYffg9rf6l0uLuxI9twbYLUQsQ8CmbOEg4YShc04qfoPH7nMaBxl6R/C2oIHvrn2/Kp2Ncpe5KV4ASl8bHnc/KqrADSKl40GY/8CQ9wMb7cGb5hkkuzQwjBF3+vEmWQhv7YfCPv6ezP8OPZVRiZQmkCgYEAp8KyQrtNp/wBwTtOicC5/KhRyXF98V8Gdr9bjU+Xl7qUQ6k2uY83tsvIVZyLws06et5pW761AUTW5f4gm5fRQfRzSWlw9PaiZfHA1TUqcMoBKoR1URF9Pop3tVWH9Ixn1/EGhfTd60yNKHdbaadMskHNATmJ60s3hbatN501yjo=",
			"type": "string"
		},
		{
			"key": "x-signature",
			"value": ""
		},
		{
			"key": "client-secret",
			"value": "182c7e30-114e-4e0d-8105-1534fd0558aa",
			"type": "string"
		},
		{
			"key": "AccessTokenBVAPI",
			"value": "928031ae-6536-4664-bc55-0f88e932b171",
			"type": "string",
			"disabled": true
		},
		{
			"key": "ip-frontend-apim",
			"value": "https://mitratest.banksumselbabel.com:8065",
			"type": "string"
		},
		{
			"key": "ip-backend-apim",
			"value": "http://172.17.28.69:8065",
			"type": "string"
		},
		{
			"key": "signature",
			"value": ""
		},
		{
			"key": "headerTimestamp",
			"value": ""
		},
		{
			"key": "accessToken",
			"value": ""
		},
		{
			"key": "channel-id",
			"value": ""
		}
	]
}